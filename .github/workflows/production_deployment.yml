name: Production Deployment

on:
  push:
    branches: [develop]

jobs:
  build:
    name: Build and Test
    runs-on: self-hosted

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mytestdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/mytestdb
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASS: postgres
          DB_HOST_TEST: localhost
          DB_PORT_TEST: 5432
          DB_NAME_TEST: mytestdb
          DB_USER_TEST: postgres
          DB_PASS_TEST: postgres
          REDIS_HOST: redis
          REDIS_PORT: 6379

          REDIS_HOST_TEST: redis
          REDIS_PORT_TEST: 6380
        run: |
          pytest tests

  docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/butakovbi/fastapi2024/fastapi-app:latest

  deploy:
    name: Deploy to Kubernetes
    needs: docker
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube status

      - name: Update Minikube Context
        run: |
          minikube update-context

      - name: Export KUBECONFIG
        run: |
          export KUBECONFIG=$HOME/.kube/config

      - name: Configure Docker Environment for Minikube
        run: |
          eval $(minikube -p minikube docker-env)

      - name: Pull Docker Images
        run: |
          docker pull butak/fastapi2024_app
          docker pull butak/fastapi2024_celery

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/ --validate=false

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/app
          kubectl rollout status deployment/celery

